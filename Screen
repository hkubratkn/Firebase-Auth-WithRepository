import android.widget.Toast
import androidx.compose.foundation.layout.Arrangement
import androidx.compose.foundation.layout.Column
import androidx.compose.ui.Alignment
import androidx.compose.ui.Modifier
import androidx.compose.ui.platform.LocalContext
import androidx.lifecycle.viewmodel.compose.viewModel

@Composable
fun RegisterPage(
    registerViewModel: RegisterViewModel = viewModel(
        factory = RegisterViewModelFactory(RegisterRepository())
    )
){

    val dataOrException = registerViewModel.data.value
    val signedIn: Boolean by registerViewModel.signedIn.observeAsState(false)
    val loading = registerViewModel.loading.observeAsState()
    val email = remember { mutableStateOf("")}
    val password = remember { mutableStateOf("") }
    val ctx = LocalContext.current

    Column(
        modifier = Modifier.fillMaxSize(),
        verticalArrangement = Arrangement.Center,
        horizontalAlignment = Alignment.CenterHorizontally
    ) {

        OutlinedTextField(
            value = email.value,
            onValueChange = {email.value = it}
        )

        OutlinedTextField(
            value = password.value,
            onValueChange = {password.value = it}
        )

        Button(
            onClick = {
                registerViewModel.signUp(email.value, password.value)
                if(signedIn){ Toast.makeText(ctx, "done", Toast.LENGTH_LONG).show() }
            }
        ) {
            Text(text = "do")
        }


        val email = "hello@one.com"
        val password = "1234567890"

        Button(
            onClick = {
                registerViewModel.login(email , password )
            }
        ) {
            Text(text = "change")
        }

        val e = dataOrException.e
        e?.let {
            Text(text = e.message!!)
        }

        if (registerViewModel.loading.value) {
            CircularProgressIndicator()
        }

    }
}
